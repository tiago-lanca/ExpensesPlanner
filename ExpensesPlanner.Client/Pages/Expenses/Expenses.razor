@attribute [Route(PagesRoutes.AllExpenses)]
@attribute [StreamRendering(true)]
@rendermode InteractiveServer

<PageTitle>Expenses</PageTitle>

<h3>Expenses</h3>
<RadzenButton Icon="add_circle" Text="Create Expense" Click="@(() => Navigation.NavigateTo(PagesRoutes.CreateExpense))" ButtonStyle="ButtonStyle.Success" />
<br />
<br />

@if (AllExpenses == null)
{
    <em>Loading...</em>
}

else
{
    <!-- Filter Category -->
    <RadzenRow AlignItems="AlignItems.Center" class="mt-3">
        <RadzenColumn Size="10" SizeMD="9" class="d-flex align-items-center gap-3 flex-wrap">
                <RadzenLabel Text="Category" Component="Category" class="font-bold" />
                <RadzenDropDown TValue="string" @bind-Value="@filteredCategory" Data="@Categories" Placeholder="Filter category"  Name="Category" Style="width: 15%;" />
                            @* Change="@(args => OnFilterChanged((string)args))" *@
                <RadzenIcon Icon="close" class="rz-clear-filter" onclick="ClearCategoryFilter" />
            <div class="vertical-divider"></div>
        <!-- Filter Month -->
                <div class="d-flex align-items-center gap-2">
                    <RadzenLabel Text="Month" Component="Month" class="font-bold" />
                    <RadzenDropDown TValue="string" @bind-Value="@filteredMonth" Data="@Months" Placeholder="Filter month" Name="Month" Style="width: 50%;" />
                    @* Change="@(args => OnFilterChanged((string)args))" *@
                    <RadzenIcon Icon="close" class="rz-clear-filter" onclick="ClearMonthFilter" />
                </div>

            
          </RadzenColumn>

        <!-- Total Amount -->
        <RadzenColumn Size="12" SizeMD="3" class="text-end mt-2 mt-md-0">
            <span class="me-1">Total Amount: </span>
            <b> @TotalAmount.ToString("C", new System.Globalization.CultureInfo("de-DE"))</b>
        </RadzenColumn>
    </RadzenRow>
    <br />

    <RadzenDataGrid AllowFiltering="false" AllowColumnResize="false" AllowAlternatingRows="false" header FilterMode="FilterMode.Advanced" AllowSorting="true" PageSize="5" AllowPaging="true" PagerHorizontalAlign="Radzen.HorizontalAlign.Left" ShowPagingSummary="true"
                    Data="@FilteredExpenses" TItem="Expense" ColumnWidth="300px" LogicalFilterOperator="LogicalFilterOperator.Or" SelectionMode="DataGridSelectionMode.Single" @bind-Value=@selectedExpense>
        <Columns>            
            <RadzenDataGridColumn Title="Description" Frozen="true" Width="150px" HeaderCssClass="font-bold">
                <Template Context="expense">
                    @expense.Description
                </Template>
            </RadzenDataGridColumn>

            <RadzenDataGridColumn Property="Amount" Title="Amount" Width="150px" HeaderCssClass="font-bold" >
                <Template Context="expense">
                    @(expense.Amount.ToString("C", new System.Globalization.CultureInfo("de-DE")))
               </Template>
            </RadzenDataGridColumn>

            <RadzenDataGridColumn Property="Category" Title="Category" Width="150px" HeaderCssClass="font-bold">                
                <Template Context="expense">
                    <div class="d-flex align-items-center">
                        <RadzenIcon Icon="@IconHelper.GetIconForCategory(expense.Category!)" class="me-2"/>
                    <span>@expense.Category</span>
                    </div>
                </Template>
            </RadzenDataGridColumn>

            <RadzenDataGridColumn Property="CreationDate" Title="Date" Width="150px" HeaderCssClass="font-bold">
                <Template Context="expense">
                    @expense.CreationDate.ToString("dd/MM/yyyy")
               </Template>
            </RadzenDataGridColumn>

            <RadzenDataGridColumn Title="Options" Width="160px" HeaderCssClass="font-bold">
                <Template Context="expense">
                    <!-- <RadzenButton Icon="search" Title="Details" Click="@(() => OpenExpenseDetails(expense.Id))" ButtonStyle="ButtonStyle.Success" /> -->
                    <RadzenButton Icon="settings" Title="Edit" Click="@(() => OpenUpdateExpenseDialog(expense.Id))" ButtonStyle="ButtonStyle.Warning" />
                <RadzenButton Icon="delete_forever" Title="Delete user forever" Click="@(() => OpenDeleteExpenseDialog(expense.Id))" Shade="Shade.Darker" Variant="Variant.Outlined" ButtonStyle="ButtonStyle.Danger" />
                </Template>
            </RadzenDataGridColumn>
        </Columns>
    </RadzenDataGrid>

    <!-- YEAR -->
    <RadzenStack Orientation="Radzen.Orientation.Horizontal" JustifyContent="JustifyContent.Center" Gap="1rem" Wrap="FlexWrap.Wrap" Style="margin-top:20px;">
        <RadzenColumn Size="10" SizeMD="9" class="d-flex align-items-center gap-3">
            @if(!allYearsExpensesActive)
            {
                <RadzenButton Icon="chevron_left" Disabled="@previousYearEnabled" Click="@(() => PreviousYear())" />
                <RadzenLabel Text="@ExpenseYear.ToString()"></RadzenLabel>
                <RadzenButton Icon="chevron_right" Disabled="@nextYearEnabled" Click="@(() => NextYear())" />
            }
        </RadzenColumn>
        
            <RadzenToggleButton Click=@(args => ToggleAllYearsButton()) @bind-Value="allYearsExpensesActive" Icon="check" ToggleIcon="close"
                                ButtonStyle="ButtonStyle.Success" ToggleButtonStyle="ButtonStyle.Danger" Text="All Years">
            </RadzenToggleButton>

    </RadzenStack>


    <!-- Pie Graphic Expenses -->
    <RadzenStack Style="margin-top: 50px;" >
        <div class="chart-pie-tooltipsize">
            @if (FilteredExpenses.Count != 0)
            {
                <RadzenChart Style="width: 100%; max-width: 500px; ">
                    @* SeriesClick=@OnSeriesClick *@            
                    <RadzenPieSeries Data="@FilteredExpenses" Title="Expenses" CategoryProperty="Category" ValueProperty="Amount" >
                    <RadzenSeriesDataLabels Visible="true" />
                </RadzenPieSeries>
                <RadzenValueAxis Formatter="@(value => $"{value:F2}€")" />
            </RadzenChart>
            } 
        </div>
    </RadzenStack>

    <!-- StackedColumns Graphic Expenses -->
    <RadzenStack Orientation="Radzen.Orientation.Horizontal" JustifyContent="JustifyContent.Start" Style="overflow-x:auto; width: 100%; margin-top: 50px; margin-bottom: 50px;">
        <RadzenChart Style="min-width: 600px; width: 100%;" @key="@chartKey">
                @foreach (var category in dataByCategory.Keys)
                {
                    <RadzenStackedColumnSeries Data="@dataByCategory[category]" CategoryProperty="Month" Title="@category" ValueProperty="TotalAmount">
                        <RadzenSeriesDataLabels Visible="false" />
                    </RadzenStackedColumnSeries>

                    <RadzenColumnOptions Radius="5" />
                    <RadzenCategoryAxis Padding="20" />
                    <RadzenValueAxis Formatter="@FormatAsEUR">
                        <RadzenGridLines Visible="true" />
                    <RadzenAxisTitle Text="Amount in EUR" />
                </RadzenValueAxis>
                }
            </RadzenChart>
    </RadzenStack>
}
